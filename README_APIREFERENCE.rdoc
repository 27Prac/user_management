= API Reference

== Rest APIs

=== Create User

==== Description
     Creates a user
==== Request
     POST /users/ HTTP/1.1
     Content-Type: application/json
     Content-Length: {xsd:nonNegativeInteger}
==== Response
     204 Created
     Location : /users/:_id

     400 Bad Request
     {
        "code": 1000,
        "description": "Input Validation Error"
     }

     400 User Not Created
     {
         "code": 1005,
         "description": "No user created"
     }





=== Get User

==== Description
     Creates a user.You need to pass the auth_token in header. It will figure out user id from auth token
==== Request
     GET /users/ HTTP/1.1
     Authorization: {auth_token}
     Content-Type: application/json
     Content-Length: {xsd:nonNegativeInteger}
==== Response
     200 OK
     {
     "base" : "<base_url>",
     "_id"  : "<user:<user_id>"
     "email": "<email_address>",
     "name"  : "<full_name>",
     }

    404 Resource Not Found
    {
         "code": 1002,
         "description": "Resource not found"
    }


=== Updates User

==== Description
     Updates a user. You need to pass the auth token. It will figure out user id from auth token
====  Request
     PUT /users/ HTTP/1.1
     Authorization: {auth_token}
     Content-Type: application/json
     Content-Length: {xsd:nonNegativeInteger}
==== Response
     201 Updated

     404 Resource Not Found
     {
         "code": 1002,
         "description": "Resource not found"
     }


=== Delete User
==== Description
     Admin api can only be called by admin.Delete a user. You need to pass the auth token of admin. It will figure out user id from auth token
==== Request
     Delete /users/ HTTP/1.1
     Authorization: {auth_token}
     Content-Type: application/json
     Content-Length: {xsd:nonNegativeInteger}
==== Response
     204 deleted

     403 Not Permitted
        {
            "code": 1001,
            "description": "Requested operation not permitted"
        }

== Auth APIs

=== GetAuthToken using OAuth2 Prototcol

==== Description
     Get accesstoken for a user
==== Request
     GET/POST /v1.0/oauth/authorize HTTP/1.1
     Query Parameters Requiredd-
           - ClientID
           - Response type
           - Redirect Endpoint

==== Response
     Response
       -AccessToken in a redirect call after login and authorizing the service.

=== Issue ClientID
==== Description
     Get the client id and secret issued by the server
====  Request
      GET /oauth/apps/new HTTP/1.1
====  Response
       Response
          -ClientID and Client Secret